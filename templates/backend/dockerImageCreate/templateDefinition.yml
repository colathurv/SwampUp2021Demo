resources:
  - name: {{ .Values.GitRepo.name }}
    type: GitRepo
    configuration:
      path: {{ .Values.GitRepo.path }} # <-- PREREQ: Fork current github repository to your github organization and mention fullpath of your forked Repository
      gitProvider: {{ .Values.GitProviderInt }}
      files:
         # To ensure that only file changes in this sub-directoty triggers a run
        include: ^SUV-204-CI-CD-Deep-Dive\:JFrog-Pipelines/java-backend/.*$
        
  - name: {{ .Values.BuildInfo.name }}
    type: BuildInfo
    configuration:
      sourceArtifactory: {{ .Values.ArtifactoryInt }}
      buildName: {{ .Values.BuildInfo.buildName}}
      buildNumber: 1

pipelines:
  - name: {{ .Values.Pipeline.name }}
    steps:
      - name: {{ .Values.MvnBuild.name }}
        type: MvnBuild
        configuration:
          sourceLocation: SUV-204-CI-CD-Deep-Dive:JFrog-Pipelines/java-backend
          mvnCommand: clean install -ntp
          resolverSnapshotRepo: libs-snapshot-virtual
          resolverReleaseRepo: libs-staging-virtual # <-- PREREQ: Create 3 maven repositories: libs-staging-local (type LOCAL), libs-staging-remote (type REMOTE) and libs-staging-virtual(type VIRTUAL). Have libs-staging-virtual aggregate the local and remote, in that order.  
          deployerSnapshotRepo: libs-demo-snapshot-local
          deployerReleaseRepo: libs-demo-release-local
          inputResources:
            - name: {{ .Values.GitRepo.name }}
          integrations:
            - name: {{ .Values.ArtifactoryInt }}
          runtime:
            type: image
            image:
              auto:
                language: java
                versions:
                  - "11"
        execution:
          onStart:
            - javac -version
            - mvn --version
          onComplete:
            - ls -lR
            - add_run_files $res_{{ .Values.GitRepo.name }}_resourcePath/SUV-204-CI-CD-Deep-Dive\:JFrog-Pipelines/java-backend/target/backend-1.0.0.jar myfile

      - name: {{ .Values.DockerBuild.name }}
        type: DockerBuild
        configuration:
          affinityGroup: bldGroup
          dockerFileLocation: SUV-204-CI-CD-Deep-Dive:JFrog-Pipelines/docker
          dockerFileName: BE-Dockerfile
          dockerImageName: {{ .Values.DockerBuild.dockerImageName }}
          dockerImageTag: '${run_number}'
          integrations:
            - name: {{ .Values.ArtifactoryInt }}
          inputResources:
            - name: {{ .Values.GitRepo.name }}
              trigger: false
          inputSteps:
            - name: {{ .Values.MvnBuild.name }}
        execution:
          onStart:
             - restore_run_files myfile $res_{{ .Values.GitRepo.name }}_resourcePath/SUV-204-CI-CD-Deep-Dive\:JFrog-Pipelines/docker/server.jar
             - ls -lR
          onComplete:
            - echo $step_env_var2
            - echo "Running $pipeline_name | $step_name on node ID $step_node_id"
      
      - name: {{ .Values.DockerPush.name }}
        type: DockerPush
        configuration:
          affinityGroup: bldGroup
          targetRepository: docker-template-local
          forceXrayScan: false
          autoPublishBuildInfo: true
          integrations:
            - name: {{ .Values.ArtifactoryInt }}
          inputSteps:
            - name: {{ .Values.DockerBuild.name }}
          outputResources:
            - name: {{ .Values.BuildInfo.name }}
